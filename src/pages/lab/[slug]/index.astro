---
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import LabLayout from "../../../layouts/LabLayout.astro";
import { getArticleSchema, labWebsite } from "../../../utils/structuredData";

interface Props {
	post: CollectionEntry<"lab">;
}

export async function getStaticPaths() {
	const blogPosts = await getCollection("lab");
	return blogPosts.map((post) => ({
		params: { slug: post.slug },
		props: { post },
	}));
}

const { post } = Astro.props;

if (!post) {
	return { status: 404 };
}

const { Content } = await post.render();

const articleStructuredData = getArticleSchema(post);

const breadcrumbsStructuredData = {
	"@context": "https://schema.org",
	"@type": "BreadcrumbList",
	itemListElement: [
		{
			"@type": "ListItem",
			position: 1,
			name: "lab",
			item: `${import.meta.env.SITE}/lab/`,
		},
		{
			"@type": "ListItem",
			position: 2,
			name: post.data.title,
			item: `${import.meta.env.SITE}/lab/${post.slug}/`,
		},
	],
};

const jsonLd = {
	"@context": "https://schema.org",
	"@graph": [articleStructuredData, breadcrumbsStructuredData, labWebsite],
};
---

<LabLayout post={post}>
	<script is:inline type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
	<div>
		<h1 class="text-[2rem] font-bold tracking-tight text-primary">
			{post.data.title}
		</h1>
		<p class="lead text-base font-medium tracking-tight text-title mb-2">
			{post.data.excerpt}
		</p>

		<!-- <Image
			src={post.data.cover}
			alt={post.data.title}
			class="mb-2 mt-6 h-auto w-full rounded-lg object-cover"
		/> -->

		<article
			class="prose prose-sm prose-headings:text-title prose-a:no-underline prose-blockquote:text-title prose-strong:text-body prose-code:text-body prose-li:marker:text-body prose-img:rounded-md">
			<div class="font-normal text-body">
				<Content />
			</div>
		</article>
	</div>
</LabLayout>
